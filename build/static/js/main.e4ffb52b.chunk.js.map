{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","key","shortid","generate","type","name","onClick","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","setState","prevState","this","objKey","Object","keys","Component","ReactDOM","render","document","querySelector"],"mappings":"+PAuBeA,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAChD,OACC,oCACC,mCAASJ,GACT,sCAAYC,GACZ,kCAAQC,GACR,oCAAUC,GACV,gDAAsBC,EAAtB,Q,gBCUYC,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACnC,OACC,oCACED,EAAQE,KAAI,SAACC,GAAD,OACZ,4BAAQC,IAAKC,IAAQC,WAAYC,KAAK,SAASC,KAAML,EAAQM,QAASR,GACpEE,QCMSO,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,oCACC,4BAAKD,GACJC,ICMWC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACC,oCACC,2BAAIA,KCAcC,E,4MACpBC,MAAQ,CACPtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGNqB,mBAAqB,WAAO,IAAD,EACK,EAAKD,MAEpC,OAH0B,EAClBtB,KADkB,EACZC,QADY,EACHC,K,EAKxBsB,gCAAkC,WACjC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKJ,MAAdtB,KAC0ByB,EAClC,OAAOE,KAAKC,MAAMF,I,EAGnBnB,gBAAkB,SAACsB,GAClB,IAAMf,EAAOe,EAAEC,OAAOhB,KACtB,EAAKiB,UAAS,SAACC,GAAD,sBACZlB,EAAOkB,EAAUlB,GAAQ,O,uDAGlB,IAAD,EACuBmB,KAAKX,MAA5BtB,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IACjBC,EAAQ8B,KAAKV,qBACbnB,EAAqB6B,KAAKT,kCAE1BU,EAASC,OAAOC,KAAKH,KAAKX,OAChC,OACC,oCACC,kBAAC,EAAD,CAASL,MAAM,yBACd,kBAAC,EAAD,CAAiBX,QAAS4B,EAAQ3B,gBAAiB0B,KAAK1B,mBAG9C,IAAVJ,EACA,kBAAC,EAAD,CAAciB,QAAQ,sBAEtB,kBAAC,EAAD,CAASH,MAAM,cACd,kBAAC,EAAD,CACCjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,U,GA/CMiC,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.e4ffb52b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>Good:{good}</p>\r\n\t\t\t<p>Neutral:{neutral}</p>\r\n\t\t\t<p>Bad:{bad}</p>\r\n\t\t\t<p>Total:{total}</p>\r\n\t\t\t<p>Positive feedback:{positivePercentage} %</p>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nStatistics.propTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number.isRequired,\r\n\tpositivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{options.map((option) => (\r\n\t\t\t\t<button key={shortid.generate()} type=\"button\" name={option} onClick={onLeaveFeedback}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</button>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\nFeedbackOptions.propTypes = {\r\n\toptions: PropTypes.array.isRequired,\r\n\tonLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{message}</p>\r\n\t\t</>\r\n\t);\r\n};\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Section from './Section/Section';\r\nimport Notification from './Notification/Notification';\r\n\r\nexport default class App extends Component {\r\n\tstate = {\r\n\t\tgood: 0,\r\n\t\tneutral: 0,\r\n\t\tbad: 0\r\n\t};\r\n\r\n\tcountTotalFeedback = () => {\r\n\t\tconst { good, neutral, bad } = this.state;\r\n\t\tconst result = good + neutral + bad;\r\n\t\treturn result;\r\n\t};\r\n\r\n\tcountPositiveFeedbackPercentage = () => {\r\n\t\tconst result = this.countTotalFeedback();\r\n\t\tconst { good } = this.state;\r\n\t\tconst percentage = (good * 100) / result;\r\n\t\treturn Math.round(percentage);\r\n\t};\r\n\r\n\tonLeaveFeedback = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\t[name]: prevState[name] + 1\r\n\t\t}));\r\n\t};\r\n\trender() {\r\n\t\tconst { good, neutral, bad } = this.state;\r\n\t\tconst total = this.countTotalFeedback();\r\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n\t\tconst objKey = Object.keys(this.state);\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Section title=\"Please leave feedback\">\r\n\t\t\t\t\t<FeedbackOptions options={objKey} onLeaveFeedback={this.onLeaveFeedback} />\r\n\t\t\t\t</Section>\r\n\r\n\t\t\t\t{total === 0 ? (\r\n\t\t\t\t\t<Notification message=\"No feedback given\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Section title=\"Statistics\">\r\n\t\t\t\t\t\t<Statistics\r\n\t\t\t\t\t\t\tgood={good}\r\n\t\t\t\t\t\t\tneutral={neutral}\r\n\t\t\t\t\t\t\tbad={bad}\r\n\t\t\t\t\t\t\ttotal={total}\r\n\t\t\t\t\t\t\tpositivePercentage={positivePercentage}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Section>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App.js';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}